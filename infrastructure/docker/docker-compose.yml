version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  turns-service:
    build: ../../services/turns
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URI=postgresql://postgres:postgres@db:5432/turns
      - DEBUG=true
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/turns.log
    ports:
      - "5000:5000"
    volumes:
      - ../../services/turns:/app
      - turns_logs:/app/logs
    restart: unless-stopped

  agents-service:
    build: ../../services/agents
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URI=postgresql://postgres:postgres@db:5432/agents
      - DEBUG=true
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/agents.log
    ports:
      - "5001:5001"
    volumes:
      - ../../services/agents:/app
      - agents_logs:/app/logs
    restart: unless-stopped

  reporting-service:
    build: ../../services/reporting
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URI=postgresql://postgres:postgres@db:5432/reporting
      - DEBUG=true
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/reporting.log
    ports:
      - "5002:5002"
    volumes:
      - ../../services/reporting:/app
      - reporting_logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
  reporting_logs:
  turns_logs:
  agents_logs: